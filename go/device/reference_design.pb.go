// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/reference_design.proto

package device

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This is the reference design from Google for OEMs/ODMs that includes
// schematics, board layouts, and initial working BIOS/EC implementations.
type ReferenceDesign struct {
	// Required. Unique ID of the ReferenceDesign.
	Id *ReferenceDesignId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. Common name used to refer to the reference design.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Required. SoC in the given reference board design.
	SocFamilyId          *SocFamilyId `protobuf:"bytes,3,opt,name=soc_family_id,json=socFamilyId,proto3" json:"soc_family_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReferenceDesign) Reset()         { *m = ReferenceDesign{} }
func (m *ReferenceDesign) String() string { return proto.CompactTextString(m) }
func (*ReferenceDesign) ProtoMessage()    {}
func (*ReferenceDesign) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e67023f6c5f39ab, []int{0}
}

func (m *ReferenceDesign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceDesign.Unmarshal(m, b)
}
func (m *ReferenceDesign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceDesign.Marshal(b, m, deterministic)
}
func (m *ReferenceDesign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceDesign.Merge(m, src)
}
func (m *ReferenceDesign) XXX_Size() int {
	return xxx_messageInfo_ReferenceDesign.Size(m)
}
func (m *ReferenceDesign) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceDesign.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceDesign proto.InternalMessageInfo

func (m *ReferenceDesign) GetId() *ReferenceDesignId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ReferenceDesign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReferenceDesign) GetSocFamilyId() *SocFamilyId {
	if m != nil {
		return m.SocFamilyId
	}
	return nil
}

func init() {
	proto.RegisterType((*ReferenceDesign)(nil), "device.ReferenceDesign")
}

func init() { proto.RegisterFile("device/reference_design.proto", fileDescriptor_9e67023f6c5f39ab) }

var fileDescriptor_9e67023f6c5f39ab = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0x49, 0x2d, 0xcb,
	0x4c, 0x4e, 0xd5, 0x2f, 0x4a, 0x4d, 0x4b, 0x2d, 0x4a, 0xcd, 0x4b, 0x4e, 0x8d, 0x4f, 0x49, 0x2d,
	0xce, 0x4c, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0x48, 0x4b, 0x29, 0xe0,
	0x50, 0x16, 0x9f, 0x99, 0x02, 0x51, 0x29, 0x25, 0x05, 0x55, 0x51, 0x9c, 0x9f, 0x1c, 0x9f, 0x96,
	0x98, 0x9b, 0x99, 0x53, 0x09, 0x97, 0x53, 0xea, 0x64, 0xe4, 0xe2, 0x0f, 0x82, 0xe9, 0x74, 0x01,
	0x6b, 0x14, 0xd2, 0xe4, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x36, 0x92, 0xd4,
	0x83, 0x68, 0xd6, 0x43, 0x53, 0xe4, 0x99, 0x12, 0xc4, 0x94, 0x99, 0x22, 0x24, 0xc4, 0xc5, 0x92,
	0x97, 0x98, 0x9b, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x0b, 0x99, 0x73, 0xf1,
	0xa2, 0xd8, 0x24, 0xc1, 0x0c, 0x36, 0x49, 0x18, 0x66, 0x52, 0x70, 0x7e, 0xb2, 0x1b, 0x58, 0xce,
	0x33, 0x25, 0x88, 0xbb, 0x18, 0xc1, 0x71, 0x32, 0x8a, 0x32, 0x48, 0xcf, 0xd7, 0x4b, 0xce, 0x28,
	0xca, 0xcf, 0xcd, 0x2c, 0xcd, 0xd5, 0xcb, 0x2f, 0x4a, 0xd7, 0x87, 0x71, 0xf2, 0x8b, 0xf5, 0x33,
	0xf3, 0xd2, 0x8a, 0x12, 0xf5, 0xc1, 0xae, 0xd6, 0x4f, 0xcf, 0xd7, 0x87, 0x18, 0x96, 0xc4, 0x06,
	0x16, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xe9, 0x88, 0xb5, 0x2d, 0x01, 0x00, 0x00,
}
