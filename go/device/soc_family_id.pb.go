// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/soc_family_id.proto

package device

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Globally unique identifier.
type SocFamilyId struct {
	// Required.
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SocFamilyId) Reset()         { *m = SocFamilyId{} }
func (m *SocFamilyId) String() string { return proto.CompactTextString(m) }
func (*SocFamilyId) ProtoMessage()    {}
func (*SocFamilyId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e52ef9e8b76b0b34, []int{0}
}

func (m *SocFamilyId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SocFamilyId.Unmarshal(m, b)
}
func (m *SocFamilyId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SocFamilyId.Marshal(b, m, deterministic)
}
func (m *SocFamilyId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SocFamilyId.Merge(m, src)
}
func (m *SocFamilyId) XXX_Size() int {
	return xxx_messageInfo_SocFamilyId.Size(m)
}
func (m *SocFamilyId) XXX_DiscardUnknown() {
	xxx_messageInfo_SocFamilyId.DiscardUnknown(m)
}

var xxx_messageInfo_SocFamilyId proto.InternalMessageInfo

func (m *SocFamilyId) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*SocFamilyId)(nil), "device.SocFamilyId")
}

func init() { proto.RegisterFile("device/soc_family_id.proto", fileDescriptor_e52ef9e8b76b0b34) }

var fileDescriptor_e52ef9e8b76b0b34 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4a, 0x49, 0x2d, 0xcb,
	0x4c, 0x4e, 0xd5, 0x2f, 0xce, 0x4f, 0x8e, 0x4f, 0x4b, 0xcc, 0xcd, 0xcc, 0xa9, 0x8c, 0xcf, 0x4c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xc8, 0x29, 0x29, 0x73, 0x71, 0x07, 0xe7,
	0x27, 0xbb, 0x81, 0x65, 0x3d, 0x53, 0x84, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x27, 0xa3, 0x28, 0x83, 0xf4, 0x7c, 0xbd, 0xe4,
	0x8c, 0xa2, 0xfc, 0xdc, 0xcc, 0xd2, 0x5c, 0xbd, 0xfc, 0xa2, 0x74, 0x7d, 0x18, 0x27, 0xbf, 0x58,
	0x3f, 0x33, 0x2f, 0xad, 0x28, 0x51, 0x1f, 0x6c, 0xac, 0x7e, 0x7a, 0xbe, 0x3e, 0xc4, 0xe0, 0x24,
	0x36, 0xb0, 0x80, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x31, 0x30, 0xe7, 0x85, 0x00, 0x00,
	0x00,
}
