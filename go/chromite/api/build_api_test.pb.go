// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chromite/api/build_api_test.proto

package chromite_api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "go.chromium.org/chromiumos/infra/proto/go/chromite/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Simple input message.
type TestRequestMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequestMessage) Reset()         { *m = TestRequestMessage{} }
func (m *TestRequestMessage) String() string { return proto.CompactTextString(m) }
func (*TestRequestMessage) ProtoMessage()    {}
func (*TestRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_78ca3263cf74c05a, []int{0}
}

func (m *TestRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequestMessage.Unmarshal(m, b)
}
func (m *TestRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequestMessage.Marshal(b, m, deterministic)
}
func (m *TestRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequestMessage.Merge(m, src)
}
func (m *TestRequestMessage) XXX_Size() int {
	return xxx_messageInfo_TestRequestMessage.Size(m)
}
func (m *TestRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequestMessage proto.InternalMessageInfo

func (m *TestRequestMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Simple output message.
type TestResultMessage struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResultMessage) Reset()         { *m = TestResultMessage{} }
func (m *TestResultMessage) String() string { return proto.CompactTextString(m) }
func (*TestResultMessage) ProtoMessage()    {}
func (*TestResultMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_78ca3263cf74c05a, []int{1}
}

func (m *TestResultMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResultMessage.Unmarshal(m, b)
}
func (m *TestResultMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResultMessage.Marshal(b, m, deterministic)
}
func (m *TestResultMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResultMessage.Merge(m, src)
}
func (m *TestResultMessage) XXX_Size() int {
	return xxx_messageInfo_TestResultMessage.Size(m)
}
func (m *TestResultMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResultMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TestResultMessage proto.InternalMessageInfo

func (m *TestResultMessage) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*TestRequestMessage)(nil), "chromite.api.TestRequestMessage")
	proto.RegisterType((*TestResultMessage)(nil), "chromite.api.TestResultMessage")
}

func init() { proto.RegisterFile("chromite/api/build_api_test.proto", fileDescriptor_78ca3263cf74c05a) }

var fileDescriptor_78ca3263cf74c05a = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xc1, 0x4e, 0x32, 0x31,
	0x10, 0xc7, 0xd3, 0x3d, 0x90, 0x7c, 0xf3, 0x09, 0x81, 0x8d, 0x41, 0xad, 0x26, 0xe2, 0xc6, 0x83,
	0x89, 0xc9, 0x92, 0xe0, 0x13, 0x18, 0x4e, 0x1c, 0x90, 0x04, 0x8d, 0x47, 0xb1, 0xd0, 0x09, 0x34,
	0x01, 0x5a, 0xdb, 0xa9, 0x0f, 0xb8, 0xef, 0xe2, 0x71, 0x1f, 0xc0, 0xc4, 0x83, 0x81, 0xad, 0x06,
	0x04, 0x6f, 0xeb, 0xb1, 0x33, 0xbf, 0x9d, 0xf9, 0xff, 0x26, 0x59, 0xb8, 0x98, 0xcc, 0xac, 0x5e,
	0x28, 0xc2, 0xb6, 0x30, 0xaa, 0x3d, 0xf6, 0x6a, 0x2e, 0x47, 0xc2, 0xa8, 0x11, 0xa1, 0xa3, 0xd4,
	0x58, 0x4d, 0x3a, 0x3e, 0xf8, 0x42, 0x52, 0x61, 0x14, 0x3f, 0xdb, 0xff, 0x41, 0xc1, 0x26, 0x97,
	0x10, 0x3f, 0xa0, 0xa3, 0x21, 0xbe, 0x78, 0x74, 0xd4, 0x47, 0xe7, 0xc4, 0x14, 0xe3, 0x1a, 0x44,
	0x4a, 0x1e, 0xb3, 0x16, 0xbb, 0xfa, 0x37, 0x8c, 0x94, 0x4c, 0xae, 0xa1, 0x51, 0x50, 0xce, 0xcf,
	0xbf, 0xa1, 0x26, 0x54, 0xec, 0xba, 0x10, 0xc0, 0xf0, 0xea, 0xbc, 0x31, 0xa8, 0xad, 0xe8, 0x5b,
	0xa3, 0xee, 0xd1, 0xbe, 0xaa, 0x09, 0xc6, 0x8f, 0xd0, 0xe8, 0x2d, 0x8d, 0xa7, 0x81, 0x27, 0xe3,
	0xa9, 0x8f, 0x34, 0xd3, 0x32, 0x6e, 0xa5, 0x9b, 0x39, 0xd3, 0xdd, 0x18, 0xfc, 0x7c, 0x1f, 0xb1,
	0x19, 0x01, 0xa1, 0x3a, 0xc4, 0xa5, 0x58, 0xa0, 0x2c, 0x6d, 0x66, 0xd2, 0xc8, 0x72, 0x5e, 0x85,
	0xff, 0x5d, 0x6d, 0x2d, 0x4e, 0xe8, 0x4e, 0x2c, 0x90, 0x1f, 0x66, 0x39, 0xaf, 0x43, 0x6d, 0xfb,
	0xd8, 0x9d, 0x77, 0x06, 0xcd, 0xde, 0xd2, 0x29, 0x89, 0xdd, 0x99, 0xd5, 0x7a, 0xd3, 0xf7, 0x09,
	0x4e, 0x8a, 0x4e, 0x28, 0x14, 0x8f, 0xf2, 0xbc, 0xa7, 0xc0, 0xb7, 0xe6, 0x0f, 0x3c, 0x95, 0xba,
	0x20, 0xa9, 0x64, 0x39, 0x8f, 0xea, 0x11, 0x6f, 0x66, 0x39, 0x8f, 0x7f, 0x9a, 0xd7, 0x59, 0xe7,
	0x83, 0xc1, 0x51, 0x58, 0xba, 0x23, 0xff, 0x0c, 0xa7, 0xa1, 0xf5, 0x47, 0xe9, 0x56, 0xfa, 0xdb,
	0x1b, 0x4a, 0xbe, 0x6f, 0xd0, 0x67, 0xbf, 0xe8, 0x47, 0xe3, 0xca, 0xfa, 0xe7, 0xb9, 0xf9, 0x0c,
	0x00, 0x00, 0xff, 0xff, 0x0e, 0xe2, 0x94, 0x7f, 0x8d, 0x03, 0x00, 0x00,
}
