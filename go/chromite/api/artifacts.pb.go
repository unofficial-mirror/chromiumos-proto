// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chromite/api/artifacts.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	chromiumos "go.chromium.org/chromiumos/infra/proto/go/chromiumos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// An artifact is a file generated during or after a build.
type Artifact struct {
	// Absolute path to the artifact file.
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a7d4c8524262a7, []int{0}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// Request describing where build artifact bundles for a given build target
// should be dumped.
type BundleRequest struct {
	// The build target to bundle artifacts for.
	// Deprecated. Use sysroot instead.
	BuildTarget *chromiumos.BuildTarget `protobuf:"bytes,1,opt,name=build_target,json=buildTarget,proto3" json:"build_target,omitempty"`
	// Absolute path to the directory in which artifacts should be dropped.
	OutputDir string `protobuf:"bytes,2,opt,name=output_dir,json=outputDir,proto3" json:"output_dir,omitempty"`
	// The chroot where the sysroot lives.
	Chroot *chromiumos.Chroot `protobuf:"bytes,3,opt,name=chroot,proto3" json:"chroot,omitempty"`
	// The sysroot where the files live.
	Sysroot              *Sysroot `protobuf:"bytes,4,opt,name=sysroot,proto3" json:"sysroot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BundleRequest) Reset()         { *m = BundleRequest{} }
func (m *BundleRequest) String() string { return proto.CompactTextString(m) }
func (*BundleRequest) ProtoMessage()    {}
func (*BundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a7d4c8524262a7, []int{1}
}

func (m *BundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BundleRequest.Unmarshal(m, b)
}
func (m *BundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BundleRequest.Marshal(b, m, deterministic)
}
func (m *BundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BundleRequest.Merge(m, src)
}
func (m *BundleRequest) XXX_Size() int {
	return xxx_messageInfo_BundleRequest.Size(m)
}
func (m *BundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BundleRequest proto.InternalMessageInfo

func (m *BundleRequest) GetBuildTarget() *chromiumos.BuildTarget {
	if m != nil {
		return m.BuildTarget
	}
	return nil
}

func (m *BundleRequest) GetOutputDir() string {
	if m != nil {
		return m.OutputDir
	}
	return ""
}

func (m *BundleRequest) GetChroot() *chromiumos.Chroot {
	if m != nil {
		return m.Chroot
	}
	return nil
}

func (m *BundleRequest) GetSysroot() *Sysroot {
	if m != nil {
		return m.Sysroot
	}
	return nil
}

// Response describing which bundles were dumped to the given output directory.
type BundleResponse struct {
	// The artifacts that added to the output directory.
	Artifacts            []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BundleResponse) Reset()         { *m = BundleResponse{} }
func (m *BundleResponse) String() string { return proto.CompactTextString(m) }
func (*BundleResponse) ProtoMessage()    {}
func (*BundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a7d4c8524262a7, []int{2}
}

func (m *BundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BundleResponse.Unmarshal(m, b)
}
func (m *BundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BundleResponse.Marshal(b, m, deterministic)
}
func (m *BundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BundleResponse.Merge(m, src)
}
func (m *BundleResponse) XXX_Size() int {
	return xxx_messageInfo_BundleResponse.Size(m)
}
func (m *BundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BundleResponse proto.InternalMessageInfo

func (m *BundleResponse) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

// Request describing where to find build artifacts that are taken from a
// sysroot.
type BundleVmFilesRequest struct {
	// The chroot where the sysroot lives.
	Chroot *chromiumos.Chroot `protobuf:"bytes,1,opt,name=chroot,proto3" json:"chroot,omitempty"`
	// The sysroot where the files live.
	Sysroot *Sysroot `protobuf:"bytes,2,opt,name=sysroot,proto3" json:"sysroot,omitempty"`
	// Test results directory relative to the sysroot.
	TestResultsDir string `protobuf:"bytes,3,opt,name=test_results_dir,json=testResultsDir,proto3" json:"test_results_dir,omitempty"`
	// Absolute path to the directory in which artifacts should be dropped.
	OutputDir            string   `protobuf:"bytes,4,opt,name=output_dir,json=outputDir,proto3" json:"output_dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BundleVmFilesRequest) Reset()         { *m = BundleVmFilesRequest{} }
func (m *BundleVmFilesRequest) String() string { return proto.CompactTextString(m) }
func (*BundleVmFilesRequest) ProtoMessage()    {}
func (*BundleVmFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a7d4c8524262a7, []int{3}
}

func (m *BundleVmFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BundleVmFilesRequest.Unmarshal(m, b)
}
func (m *BundleVmFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BundleVmFilesRequest.Marshal(b, m, deterministic)
}
func (m *BundleVmFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BundleVmFilesRequest.Merge(m, src)
}
func (m *BundleVmFilesRequest) XXX_Size() int {
	return xxx_messageInfo_BundleVmFilesRequest.Size(m)
}
func (m *BundleVmFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BundleVmFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BundleVmFilesRequest proto.InternalMessageInfo

func (m *BundleVmFilesRequest) GetChroot() *chromiumos.Chroot {
	if m != nil {
		return m.Chroot
	}
	return nil
}

func (m *BundleVmFilesRequest) GetSysroot() *Sysroot {
	if m != nil {
		return m.Sysroot
	}
	return nil
}

func (m *BundleVmFilesRequest) GetTestResultsDir() string {
	if m != nil {
		return m.TestResultsDir
	}
	return ""
}

func (m *BundleVmFilesRequest) GetOutputDir() string {
	if m != nil {
		return m.OutputDir
	}
	return ""
}

func init() {
	proto.RegisterType((*Artifact)(nil), "chromite.api.Artifact")
	proto.RegisterType((*BundleRequest)(nil), "chromite.api.BundleRequest")
	proto.RegisterType((*BundleResponse)(nil), "chromite.api.BundleResponse")
	proto.RegisterType((*BundleVmFilesRequest)(nil), "chromite.api.BundleVmFilesRequest")
}

func init() { proto.RegisterFile("chromite/api/artifacts.proto", fileDescriptor_62a7d4c8524262a7) }

var fileDescriptor_62a7d4c8524262a7 = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xda, 0xaa, 0xd0, 0xdb, 0x6d, 0x14, 0xf3, 0xd1, 0x28, 0x1b, 0x68, 0xca, 0x53, 0xc5,
	0x43, 0x22, 0x15, 0x84, 0x10, 0x6f, 0x2b, 0x50, 0x84, 0x18, 0x52, 0x49, 0x3b, 0x84, 0xf6, 0x52,
	0xb9, 0x8d, 0x97, 0x59, 0x4a, 0x62, 0x63, 0x3b, 0xa0, 0xfd, 0x03, 0x7e, 0x14, 0x4f, 0xbc, 0xf0,
	0x6b, 0xf8, 0x0f, 0x28, 0x76, 0xd2, 0x26, 0x68, 0x42, 0x4c, 0xe9, 0x5b, 0x7b, 0xce, 0xc9, 0xb1,
	0xef, 0xb9, 0xbe, 0x17, 0x8e, 0xd6, 0x97, 0x82, 0x25, 0x54, 0x11, 0x1f, 0x73, 0xea, 0x63, 0xa1,
	0xe8, 0x05, 0x5e, 0x2b, 0xe9, 0x71, 0xc1, 0x14, 0x43, 0x7b, 0x25, 0xeb, 0x61, 0x4e, 0x9d, 0xba,
	0x76, 0x95, 0xd1, 0x38, 0x5c, 0x62, 0x4e, 0x8d, 0xd6, 0x71, 0x6a, 0xac, 0xbc, 0x92, 0x82, 0x31,
	0x55, 0x70, 0x43, 0xc3, 0x65, 0x09, 0x93, 0xfe, 0x9a, 0x25, 0x09, 0x4b, 0x0d, 0xe1, 0x3e, 0x86,
	0xdb, 0x27, 0xc5, 0x99, 0x08, 0x41, 0x87, 0x63, 0x75, 0x69, 0x5b, 0xc7, 0xd6, 0xa8, 0x17, 0xe8,
	0xdf, 0xee, 0x2f, 0x0b, 0xf6, 0x27, 0x59, 0x1a, 0xc6, 0x24, 0x20, 0x5f, 0x32, 0x22, 0x15, 0x7a,
	0x09, 0x7b, 0xe6, 0x64, 0x85, 0x45, 0x44, 0x94, 0x56, 0xf7, 0xc7, 0x43, 0x6f, 0x7b, 0x82, 0x37,
	0xc9, 0xf9, 0x85, 0xa6, 0x83, 0xfe, 0x6a, 0xfb, 0x07, 0x3d, 0x02, 0x60, 0x99, 0xe2, 0x99, 0x5a,
	0x86, 0x54, 0xd8, 0x2d, 0x7d, 0x4e, 0xcf, 0x20, 0xaf, 0xa9, 0x40, 0x4f, 0xa0, 0x9b, 0xbb, 0x30,
	0x65, 0xb7, 0xb5, 0x29, 0xaa, 0x9a, 0xbe, 0xd2, 0x4c, 0x50, 0x28, 0x90, 0x0f, 0xb7, 0x8a, 0x12,
	0xed, 0x8e, 0x16, 0x3f, 0xf0, 0xaa, 0x59, 0x79, 0x73, 0x43, 0x06, 0xa5, 0xca, 0x9d, 0xc2, 0x41,
	0x59, 0x88, 0xe4, 0x2c, 0x95, 0x04, 0x3d, 0x83, 0xde, 0x26, 0x6f, 0xdb, 0x3a, 0x6e, 0x8f, 0xfa,
	0xe3, 0x87, 0x75, 0x93, 0x32, 0x9a, 0x60, 0x2b, 0x74, 0x7f, 0x58, 0x70, 0xdf, 0x18, 0x7d, 0x4a,
	0xa6, 0x34, 0x26, 0xb2, 0x0c, 0x66, 0x7b, 0x7b, 0xeb, 0x26, 0xb7, 0x6f, 0xfd, 0xcf, 0xed, 0xd1,
	0x08, 0x06, 0x8a, 0x48, 0xb5, 0x14, 0x44, 0x66, 0xb1, 0x92, 0x3a, 0xbf, 0xb6, 0xce, 0xef, 0x20,
	0xc7, 0x03, 0x03, 0xe7, 0x21, 0xd6, 0x33, 0xee, 0xfc, 0x95, 0xf1, 0xf8, 0x7b, 0x17, 0x06, 0x65,
	0x59, 0x72, 0x4e, 0xc4, 0x57, 0xba, 0x26, 0x68, 0x06, 0xf7, 0x4c, 0x49, 0x27, 0x99, 0x62, 0xb9,
	0x9f, 0x2e, 0x0c, 0x1d, 0xd6, 0x2f, 0x55, 0x7b, 0x07, 0xce, 0xd1, 0xf5, 0x64, 0x91, 0xed, 0x07,
	0x18, 0x18, 0xe4, 0x8d, 0xee, 0xff, 0x29, 0x8b, 0x1a, 0xd9, 0xbd, 0x2f, 0x9b, 0x37, 0xa5, 0x22,
	0xf9, 0x86, 0x05, 0xd9, 0x89, 0xd9, 0xbb, 0x04, 0x47, 0xe4, 0x9c, 0xf2, 0x26, 0x66, 0x0b, 0x18,
	0x1a, 0x64, 0x46, 0xd3, 0x94, 0x84, 0x6f, 0xf3, 0x4f, 0xb4, 0x6f, 0xa3, 0x7a, 0x3f, 0xc3, 0xa1,
	0x41, 0xe6, 0x34, 0xe1, 0x31, 0xc9, 0x5f, 0x4f, 0x42, 0x36, 0x6d, 0x6b, 0xe2, 0x7c, 0x0a, 0x77,
	0x0c, 0xb2, 0xc0, 0x3b, 0x68, 0xf3, 0x19, 0xd8, 0x85, 0x1b, 0x91, 0xea, 0x8c, 0x87, 0x58, 0x91,
	0x19, 0xbe, 0x8a, 0x19, 0x0e, 0x1b, 0xd9, 0x7e, 0x2c, 0x97, 0x4e, 0x31, 0x62, 0xc8, 0xbd, 0x4e,
	0x5e, 0x9f, 0xbf, 0x7f, 0x5b, 0x3a, 0x77, 0x7f, 0xfe, 0x76, 0xf6, 0x2b, 0x03, 0x3f, 0x68, 0x4d,
	0x5e, 0x9c, 0x3f, 0x8f, 0xd8, 0x66, 0x48, 0x3d, 0x26, 0x22, 0xbf, 0xb2, 0x26, 0x69, 0x7a, 0x21,
	0xb0, 0xaf, 0xb7, 0xa4, 0x1f, 0x31, 0xbf, 0xba, 0x5c, 0x57, 0x5d, 0x0d, 0x3f, 0xfd, 0x13, 0x00,
	0x00, 0xff, 0xff, 0x9a, 0x0b, 0xa2, 0x2f, 0xbd, 0x05, 0x00, 0x00,
}
