// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testplans/build_report.proto

package testplans

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BuildReport_BuildResultStatus int32

const (
	BuildReport_BUILD_RESULT_STATUS_UNSPECIFIED BuildReport_BuildResultStatus = 0
	BuildReport_SUCCESS                         BuildReport_BuildResultStatus = 1
	BuildReport_FAILURE                         BuildReport_BuildResultStatus = 2
)

var BuildReport_BuildResultStatus_name = map[int32]string{
	0: "BUILD_RESULT_STATUS_UNSPECIFIED",
	1: "SUCCESS",
	2: "FAILURE",
}

var BuildReport_BuildResultStatus_value = map[string]int32{
	"BUILD_RESULT_STATUS_UNSPECIFIED": 0,
	"SUCCESS":                         1,
	"FAILURE":                         2,
}

func (x BuildReport_BuildResultStatus) String() string {
	return proto.EnumName(BuildReport_BuildResultStatus_name, int32(x))
}

func (BuildReport_BuildResultStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d96fa905a429c086, []int{0, 0}
}

type BuildReport_EarlyTerminationStatus int32

const (
	BuildReport_EARLY_TERMINATION_STATUS_UNSPECIFIED BuildReport_EarlyTerminationStatus = 0
	BuildReport_NOT_TERMINATED_EARLY                 BuildReport_EarlyTerminationStatus = 1
	BuildReport_NO_RELEVANT_CHANGES                  BuildReport_EarlyTerminationStatus = 2
)

var BuildReport_EarlyTerminationStatus_name = map[int32]string{
	0: "EARLY_TERMINATION_STATUS_UNSPECIFIED",
	1: "NOT_TERMINATED_EARLY",
	2: "NO_RELEVANT_CHANGES",
}

var BuildReport_EarlyTerminationStatus_value = map[string]int32{
	"EARLY_TERMINATION_STATUS_UNSPECIFIED": 0,
	"NOT_TERMINATED_EARLY":                 1,
	"NO_RELEVANT_CHANGES":                  2,
}

func (x BuildReport_EarlyTerminationStatus) String() string {
	return proto.EnumName(BuildReport_EarlyTerminationStatus_name, int32(x))
}

func (BuildReport_EarlyTerminationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d96fa905a429c086, []int{0, 1}
}

// The result of a CrOS build for a single build target
type BuildReport struct {
	// A Chrome OS build target, such as "eve".
	// TODO(seanabraham): Import the common BuildTarget message once it has been
	// moved out of chromite.
	BuildTarget string `protobuf:"bytes,1,opt,name=build_target,json=buildTarget,proto3" json:"build_target,omitempty"`
	// A Chrome OS reference design, such as "Google_Reef", or none, if there's no
	// MAINBOARD_FAMILY for this build target. Values come from
	// `mosys platform family`.
	ReferenceDesign        string                             `protobuf:"bytes,2,opt,name=reference_design,json=referenceDesign,proto3" json:"reference_design,omitempty"`
	BuildResultStatus      BuildReport_BuildResultStatus      `protobuf:"varint,3,opt,name=build_result_status,json=buildResultStatus,proto3,enum=testplans.BuildReport_BuildResultStatus" json:"build_result_status,omitempty"`
	EarlyTerminationStatus BuildReport_EarlyTerminationStatus `protobuf:"varint,4,opt,name=early_termination_status,json=earlyTerminationStatus,proto3,enum=testplans.BuildReport_EarlyTerminationStatus" json:"early_termination_status,omitempty"`
	// Google Storage path to the folder containing artifacts for the build.
	// e.g. gs://chromeos-image-archive/eve-paladin/version
	TestArtifactsPath string `protobuf:"bytes,5,opt,name=test_artifacts_path,json=testArtifactsPath,proto3" json:"test_artifacts_path,omitempty"`
	// Path to a file containing the DepGraph for the build.
	// See http://cs/chromeos_public/chromite/api/proto/depgraph.proto
	// TODO(seanabraham): Import the DepGraph message directly once it has been
	// moved out of chromite.
	DepGraphFilePath string `protobuf:"bytes,6,opt,name=dep_graph_file_path,json=depGraphFilePath,proto3" json:"dep_graph_file_path,omitempty"`
	// Details about commits that should be considered relevant for the build.
	Commit               []*Commit `protobuf:"bytes,7,rep,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BuildReport) Reset()         { *m = BuildReport{} }
func (m *BuildReport) String() string { return proto.CompactTextString(m) }
func (*BuildReport) ProtoMessage()    {}
func (*BuildReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_d96fa905a429c086, []int{0}
}

func (m *BuildReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildReport.Unmarshal(m, b)
}
func (m *BuildReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildReport.Marshal(b, m, deterministic)
}
func (m *BuildReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildReport.Merge(m, src)
}
func (m *BuildReport) XXX_Size() int {
	return xxx_messageInfo_BuildReport.Size(m)
}
func (m *BuildReport) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildReport.DiscardUnknown(m)
}

var xxx_messageInfo_BuildReport proto.InternalMessageInfo

func (m *BuildReport) GetBuildTarget() string {
	if m != nil {
		return m.BuildTarget
	}
	return ""
}

func (m *BuildReport) GetReferenceDesign() string {
	if m != nil {
		return m.ReferenceDesign
	}
	return ""
}

func (m *BuildReport) GetBuildResultStatus() BuildReport_BuildResultStatus {
	if m != nil {
		return m.BuildResultStatus
	}
	return BuildReport_BUILD_RESULT_STATUS_UNSPECIFIED
}

func (m *BuildReport) GetEarlyTerminationStatus() BuildReport_EarlyTerminationStatus {
	if m != nil {
		return m.EarlyTerminationStatus
	}
	return BuildReport_EARLY_TERMINATION_STATUS_UNSPECIFIED
}

func (m *BuildReport) GetTestArtifactsPath() string {
	if m != nil {
		return m.TestArtifactsPath
	}
	return ""
}

func (m *BuildReport) GetDepGraphFilePath() string {
	if m != nil {
		return m.DepGraphFilePath
	}
	return ""
}

func (m *BuildReport) GetCommit() []*Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

type Commit struct {
	// All of the files that were affected (e.g. added, modified, deleted)
	// by this commit.
	File                 []*File  `protobuf:"bytes,1,rep,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_d96fa905a429c086, []int{1}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetFile() []*File {
	if m != nil {
		return m.File
	}
	return nil
}

type File struct {
	// The path to a file in the Chromium/Chrome OS repos, relative to the repo
	// checkout root.
	// e.g. src/third_party/kernel/v3.8/dummyfile.dat
	SourceTreePath       string   `protobuf:"bytes,1,opt,name=source_tree_path,json=sourceTreePath,proto3" json:"source_tree_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_d96fa905a429c086, []int{2}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetSourceTreePath() string {
	if m != nil {
		return m.SourceTreePath
	}
	return ""
}

func init() {
	proto.RegisterEnum("testplans.BuildReport_BuildResultStatus", BuildReport_BuildResultStatus_name, BuildReport_BuildResultStatus_value)
	proto.RegisterEnum("testplans.BuildReport_EarlyTerminationStatus", BuildReport_EarlyTerminationStatus_name, BuildReport_EarlyTerminationStatus_value)
	proto.RegisterType((*BuildReport)(nil), "testplans.BuildReport")
	proto.RegisterType((*Commit)(nil), "testplans.Commit")
	proto.RegisterType((*File)(nil), "testplans.File")
}

func init() { proto.RegisterFile("testplans/build_report.proto", fileDescriptor_d96fa905a429c086) }

var fileDescriptor_d96fa905a429c086 = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xd1, 0x8e, 0xd2, 0x40,
	0x14, 0xb5, 0x2c, 0xb2, 0xd9, 0x8b, 0xd9, 0x2d, 0x83, 0x59, 0xfb, 0x60, 0x22, 0xb2, 0x3e, 0x74,
	0x1f, 0x68, 0xcd, 0x6e, 0xfc, 0x80, 0x02, 0xc3, 0xda, 0x04, 0xcb, 0x66, 0xda, 0x1a, 0xf5, 0x65,
	0x32, 0xc0, 0x50, 0x9a, 0x94, 0x4e, 0x33, 0x9d, 0x3e, 0xf8, 0xdd, 0xfe, 0x80, 0xe9, 0x00, 0x95,
	0x28, 0xbe, 0xf5, 0x9e, 0x73, 0xee, 0xb9, 0xf7, 0x9e, 0x74, 0xe0, 0xad, 0xe2, 0xa5, 0x2a, 0x32,
	0x96, 0x97, 0xee, 0xb2, 0x4a, 0xb3, 0x35, 0x95, 0xbc, 0x10, 0x52, 0x39, 0x85, 0x14, 0x4a, 0xa0,
	0xab, 0x86, 0x1d, 0xfe, 0x6a, 0x43, 0x77, 0x5c, 0x2b, 0x88, 0x16, 0xa0, 0xf7, 0xf0, 0x6a, 0xdf,
	0xa0, 0x98, 0x4c, 0xb8, 0xb2, 0x8c, 0x81, 0x61, 0x5f, 0x91, 0xae, 0xc6, 0x22, 0x0d, 0xa1, 0x7b,
	0x30, 0x25, 0xdf, 0x70, 0xc9, 0xf3, 0x15, 0xa7, 0x6b, 0x5e, 0xa6, 0x49, 0x6e, 0xb5, 0xb4, 0xec,
	0xa6, 0xc1, 0xa7, 0x1a, 0x46, 0xdf, 0xa0, 0x7f, 0x1c, 0x5f, 0x56, 0x99, 0xa2, 0xa5, 0x62, 0xaa,
	0x2a, 0xad, 0x8b, 0x81, 0x61, 0x5f, 0x3f, 0xd8, 0x4e, 0xb3, 0x86, 0x73, 0xb2, 0xc2, 0xf1, 0xbb,
	0x6e, 0x08, 0xb5, 0x9e, 0xf4, 0x96, 0x7f, 0x43, 0x28, 0x01, 0x8b, 0x33, 0x99, 0xfd, 0xa4, 0x8a,
	0xcb, 0x5d, 0x9a, 0x33, 0x95, 0x8a, 0xfc, 0x68, 0xdf, 0xd6, 0xf6, 0xa3, 0xff, 0xd8, 0xe3, 0xba,
	0x2d, 0xfa, 0xd3, 0x75, 0x98, 0x71, 0xcb, 0xcf, 0xe2, 0xc8, 0x81, 0x7e, 0xed, 0x43, 0x99, 0x54,
	0xe9, 0x86, 0xad, 0x54, 0x49, 0x0b, 0xa6, 0xb6, 0xd6, 0x4b, 0x7d, 0x70, 0xaf, 0xa6, 0xbc, 0x23,
	0xf3, 0xcc, 0xd4, 0x16, 0x8d, 0xa0, 0xbf, 0xe6, 0x05, 0x4d, 0x24, 0x2b, 0xb6, 0x74, 0x93, 0x66,
	0x7c, 0xaf, 0xef, 0x68, 0xbd, 0xb9, 0xe6, 0xc5, 0x53, 0xcd, 0xcc, 0xd2, 0x8c, 0x6b, 0xf9, 0x3d,
	0x74, 0x56, 0x62, 0xb7, 0x4b, 0x95, 0x75, 0x39, 0xb8, 0xb0, 0xbb, 0x0f, 0xbd, 0x93, 0xad, 0x27,
	0x9a, 0x20, 0x07, 0xc1, 0x90, 0x40, 0xef, 0x9f, 0x68, 0xd0, 0x1d, 0xbc, 0x1b, 0xc7, 0xfe, 0x7c,
	0x4a, 0x09, 0x0e, 0xe3, 0x79, 0x44, 0xc3, 0xc8, 0x8b, 0xe2, 0x90, 0xc6, 0x41, 0xf8, 0x8c, 0x27,
	0xfe, 0xcc, 0xc7, 0x53, 0xf3, 0x05, 0xea, 0xc2, 0x65, 0x18, 0x4f, 0x26, 0x38, 0x0c, 0x4d, 0xa3,
	0x2e, 0x66, 0x9e, 0x3f, 0x8f, 0x09, 0x36, 0x5b, 0xc3, 0x0a, 0x6e, 0xcf, 0xe7, 0x81, 0x6c, 0xf8,
	0x80, 0x3d, 0x32, 0xff, 0x4e, 0x23, 0x4c, 0xbe, 0xf8, 0x81, 0x17, 0xf9, 0x8b, 0xe0, 0xbc, 0xbb,
	0x05, 0xaf, 0x83, 0x45, 0xd4, 0xe8, 0xf0, 0x94, 0xea, 0x46, 0xd3, 0x40, 0x6f, 0xa0, 0x1f, 0x2c,
	0x28, 0xc1, 0x73, 0xfc, 0xd5, 0x0b, 0x22, 0x3a, 0xf9, 0xec, 0x05, 0x4f, 0x38, 0x34, 0x5b, 0xc3,
	0x11, 0x74, 0xf6, 0xc7, 0xa1, 0x3b, 0x68, 0xd7, 0x21, 0x59, 0x86, 0xbe, 0xfe, 0xe6, 0xe4, 0xfa,
	0x3a, 0x22, 0xa2, 0xc9, 0xe1, 0x47, 0x68, 0xd7, 0x15, 0xb2, 0xc1, 0x2c, 0x45, 0x25, 0x57, 0x9c,
	0x2a, 0xc9, 0x0f, 0xc1, 0xee, 0x7f, 0xd0, 0xeb, 0x3d, 0x1e, 0x49, 0xae, 0x63, 0x1d, 0x7f, 0xfa,
	0xf1, 0x98, 0x08, 0x67, 0xb5, 0x95, 0x62, 0x97, 0x56, 0x3b, 0x47, 0xc8, 0xc4, 0x3d, 0x16, 0xa2,
	0x74, 0xd3, 0x7c, 0x23, 0x99, 0xab, 0xdf, 0x82, 0x9b, 0x08, 0xb7, 0x99, 0xb9, 0xec, 0x68, 0xec,
	0xf1, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xfd, 0xc2, 0xe4, 0x3f, 0x03, 0x00, 0x00,
}
