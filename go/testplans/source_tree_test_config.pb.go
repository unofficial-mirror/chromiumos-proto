// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testplans/source_tree_test_config.proto

package testplans

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Testing restrictions to apply to a source tree.
type TestRestriction struct {
	// Whether to disable hardware tests.
	DisableHwTests bool `protobuf:"varint,1,opt,name=disable_hw_tests,json=disableHwTests,proto3" json:"disable_hw_tests,omitempty"`
	// Whether to disable image tests.
	DisableImageTests bool `protobuf:"varint,2,opt,name=disable_image_tests,json=disableImageTests,proto3" json:"disable_image_tests,omitempty"`
	// Whether to disable virtual machine tests.
	DisableVmTests       bool     `protobuf:"varint,3,opt,name=disable_vm_tests,json=disableVmTests,proto3" json:"disable_vm_tests,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRestriction) Reset()         { *m = TestRestriction{} }
func (m *TestRestriction) String() string { return proto.CompactTextString(m) }
func (*TestRestriction) ProtoMessage()    {}
func (*TestRestriction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aed450ade7161bc, []int{0}
}

func (m *TestRestriction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRestriction.Unmarshal(m, b)
}
func (m *TestRestriction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRestriction.Marshal(b, m, deterministic)
}
func (m *TestRestriction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRestriction.Merge(m, src)
}
func (m *TestRestriction) XXX_Size() int {
	return xxx_messageInfo_TestRestriction.Size(m)
}
func (m *TestRestriction) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRestriction.DiscardUnknown(m)
}

var xxx_messageInfo_TestRestriction proto.InternalMessageInfo

func (m *TestRestriction) GetDisableHwTests() bool {
	if m != nil {
		return m.DisableHwTests
	}
	return false
}

func (m *TestRestriction) GetDisableImageTests() bool {
	if m != nil {
		return m.DisableImageTests
	}
	return false
}

func (m *TestRestriction) GetDisableVmTests() bool {
	if m != nil {
		return m.DisableVmTests
	}
	return false
}

// A set of test restrictions for a source tree.
type SourceTreeTestRestriction struct {
	// A CrOS source tree.
	SourceTree *SourceTree `protobuf:"bytes,1,opt,name=source_tree,json=sourceTree,proto3" json:"source_tree,omitempty"`
	// The test restrictions to apply to the source tree.
	TestRestriction      *TestRestriction `protobuf:"bytes,2,opt,name=test_restriction,json=testRestriction,proto3" json:"test_restriction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SourceTreeTestRestriction) Reset()         { *m = SourceTreeTestRestriction{} }
func (m *SourceTreeTestRestriction) String() string { return proto.CompactTextString(m) }
func (*SourceTreeTestRestriction) ProtoMessage()    {}
func (*SourceTreeTestRestriction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aed450ade7161bc, []int{1}
}

func (m *SourceTreeTestRestriction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceTreeTestRestriction.Unmarshal(m, b)
}
func (m *SourceTreeTestRestriction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceTreeTestRestriction.Marshal(b, m, deterministic)
}
func (m *SourceTreeTestRestriction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceTreeTestRestriction.Merge(m, src)
}
func (m *SourceTreeTestRestriction) XXX_Size() int {
	return xxx_messageInfo_SourceTreeTestRestriction.Size(m)
}
func (m *SourceTreeTestRestriction) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceTreeTestRestriction.DiscardUnknown(m)
}

var xxx_messageInfo_SourceTreeTestRestriction proto.InternalMessageInfo

func (m *SourceTreeTestRestriction) GetSourceTree() *SourceTree {
	if m != nil {
		return m.SourceTree
	}
	return nil
}

func (m *SourceTreeTestRestriction) GetTestRestriction() *TestRestriction {
	if m != nil {
		return m.TestRestriction
	}
	return nil
}

// Configures test restrictions for all relevant source trees.
// This is the root message.
type SourceTreeTestCfg struct {
	// (Source tree, test restriction) pairs.
	SourceTreeTestRestriction []*SourceTreeTestRestriction `protobuf:"bytes,1,rep,name=source_tree_test_restriction,json=sourceTreeTestRestriction,proto3" json:"source_tree_test_restriction,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                     `json:"-"`
	XXX_unrecognized          []byte                       `json:"-"`
	XXX_sizecache             int32                        `json:"-"`
}

func (m *SourceTreeTestCfg) Reset()         { *m = SourceTreeTestCfg{} }
func (m *SourceTreeTestCfg) String() string { return proto.CompactTextString(m) }
func (*SourceTreeTestCfg) ProtoMessage()    {}
func (*SourceTreeTestCfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aed450ade7161bc, []int{2}
}

func (m *SourceTreeTestCfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceTreeTestCfg.Unmarshal(m, b)
}
func (m *SourceTreeTestCfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceTreeTestCfg.Marshal(b, m, deterministic)
}
func (m *SourceTreeTestCfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceTreeTestCfg.Merge(m, src)
}
func (m *SourceTreeTestCfg) XXX_Size() int {
	return xxx_messageInfo_SourceTreeTestCfg.Size(m)
}
func (m *SourceTreeTestCfg) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceTreeTestCfg.DiscardUnknown(m)
}

var xxx_messageInfo_SourceTreeTestCfg proto.InternalMessageInfo

func (m *SourceTreeTestCfg) GetSourceTreeTestRestriction() []*SourceTreeTestRestriction {
	if m != nil {
		return m.SourceTreeTestRestriction
	}
	return nil
}

func init() {
	proto.RegisterType((*TestRestriction)(nil), "testplans.TestRestriction")
	proto.RegisterType((*SourceTreeTestRestriction)(nil), "testplans.SourceTreeTestRestriction")
	proto.RegisterType((*SourceTreeTestCfg)(nil), "testplans.SourceTreeTestCfg")
}

func init() {
	proto.RegisterFile("testplans/source_tree_test_config.proto", fileDescriptor_9aed450ade7161bc)
}

var fileDescriptor_9aed450ade7161bc = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xc9, 0x5b, 0x78, 0xd1, 0x0d, 0xd8, 0x36, 0xa2, 0xd8, 0xe2, 0xa1, 0x14, 0xc1, 0x9e,
	0x76, 0x21, 0x45, 0x3f, 0x80, 0x22, 0xe8, 0x35, 0x16, 0x0f, 0x5e, 0x42, 0x1a, 0x27, 0xdb, 0x85,
	0x6e, 0xa6, 0xec, 0x6c, 0x2d, 0xf8, 0x3d, 0xbc, 0xf8, 0x69, 0x25, 0xdb, 0x34, 0xff, 0xd4, 0x5b,
	0x32, 0xf3, 0x9b, 0xe7, 0x79, 0x66, 0x87, 0x5d, 0x5b, 0x20, 0xbb, 0x59, 0x27, 0x39, 0x09, 0xc2,
	0xad, 0x49, 0x21, 0xb6, 0x06, 0x20, 0x2e, 0xaa, 0x71, 0x8a, 0x79, 0xa6, 0x24, 0xdf, 0x18, 0xb4,
	0x18, 0x1c, 0x57, 0xe0, 0xf8, 0xbc, 0x9e, 0x49, 0x51, 0x6b, 0xcc, 0xf7, 0xc8, 0xf4, 0xd3, 0x63,
	0xfd, 0x05, 0x90, 0x8d, 0x80, 0xac, 0x51, 0xa9, 0x55, 0x98, 0x07, 0x33, 0x36, 0x78, 0x53, 0x94,
	0x2c, 0xd7, 0x10, 0xaf, 0x76, 0x4e, 0x96, 0x2e, 0xbc, 0x89, 0x37, 0x3b, 0x8a, 0x4e, 0xca, 0xfa,
	0xe3, 0xae, 0x98, 0xa1, 0x80, 0xb3, 0xd3, 0x03, 0xa9, 0x74, 0x22, 0xa1, 0x84, 0xff, 0x39, 0x78,
	0x58, 0xb6, 0x9e, 0x8a, 0xce, 0x9e, 0x6f, 0x28, 0xbf, 0xeb, 0x12, 0xee, 0xb5, 0x94, 0x5f, 0xb4,
	0x23, 0xa7, 0x5f, 0x1e, 0x1b, 0x3d, 0xbb, 0xe5, 0x16, 0x06, 0xa0, 0x9b, 0xf0, 0x96, 0xf9, 0x8d,
	0xcd, 0x5d, 0x38, 0x3f, 0x3c, 0xe3, 0xd5, 0x8e, 0xbc, 0x1e, 0x8d, 0x18, 0x55, 0xdf, 0xc1, 0x03,
	0x1b, 0xb8, 0x57, 0x32, 0xb5, 0x96, 0x0b, 0xeb, 0x87, 0xe3, 0xc6, 0x70, 0xc7, 0x2d, 0xea, 0xdb,
	0x76, 0x61, 0xfa, 0xc1, 0x86, 0xed, 0x6c, 0xf7, 0x99, 0x0c, 0x80, 0x5d, 0xfe, 0xb8, 0x46, 0xd3,
	0xc7, 0x9b, 0xf4, 0x66, 0x7e, 0x78, 0xf5, 0x6b, 0xc8, 0xae, 0xe3, 0x88, 0xfe, 0x6a, 0xdd, 0xdd,
	0xbc, 0xce, 0x25, 0xf2, 0x74, 0x65, 0x50, 0xab, 0xad, 0xe6, 0x68, 0xa4, 0x38, 0xfc, 0x20, 0x09,
	0x95, 0x67, 0x26, 0x11, 0xee, 0xb4, 0x42, 0xa2, 0xa8, 0xbc, 0x96, 0xff, 0x5d, 0x6d, 0xfe, 0x1d,
	0x00, 0x00, 0xff, 0xff, 0xed, 0x1a, 0x27, 0x43, 0x3c, 0x02, 0x00, 0x00,
}
