// Copyright 2019 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package testplans;

option go_package = "go.chromium.org/chromiumos/infra/proto/go/testplans";

import "chromiumos/common.proto";
import "testplans/target_test_requirements_config.proto";

message ProtoBytes {
  bytes serialized_proto = 1;
}

message GenerateTestPlanRequest {
  reserved 1, 2;

  // Serialized buildbucket Build protos that are part of this orchestrator run.
  // See https://chromium.googlesource.com/infra/luci/luci-go/+/master/buildbucket/proto/build.proto
  repeated ProtoBytes buildbucket_protos = 5;

  // Path on disk to the chromiumos repo checkout.
  string chromiumos_checkout_root = 4;

  // Path on disk to the "repo" CLI tool.
  string repo_tool_path = 6;
}

// The final test plan.
message GenerateTestPlanResponse {
  repeated TestUnit test_unit = 1;
}

// The files that should be tested in a test plan.
message BuildPayload {
  // The GS bucket in which artifacts for the build are stored, e.g.
  // gs://chromeos-image-archive
  string artifacts_gs_bucket = 1;

  // The path in the bucket in which artifacts for the build are stored, e.g.
  // eve-paladin/R73-11588.0.0-rc4
  string artifacts_gs_path = 2;
}

// Hardware or VM requirements for running a test plan.
// TODO(seanabraham): Remove this, as scheduling requirements are now contained
// in the TestCfg proto itself.
message SchedulingRequirements {
  oneof target_type {
    // Any CrOS build target, such as "kevin". This should correspond to a
    // Portage overlay.
    string build_target = 2;
  }
}

// Metadata for executing one test configuration for one target type.
message TestUnit {
  oneof TestCfg {
    GceTestCfg gce_test_cfg = 1;
    HwTestCfg hw_test_cfg = 2;
    MoblabVmTestCfg moblab_vm_test_cfg = 3;
    TastVmTestCfg tast_vm_test_cfg = 4;
    VmTestCfg vm_test_cfg = 5;
  }

  // The build target for this test unit.
  chromiumos.BuildTarget build_target = 8;

  // The scheduling requirements for this test unit.
  SchedulingRequirements scheduling_requirements = 6;

  // The build files provided to run this test unit.
  BuildPayload build_payload = 7;
}
